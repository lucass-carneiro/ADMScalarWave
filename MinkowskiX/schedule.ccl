SCHEDULE MinkowskiX_Startup AT STARTUP
{
  LANG: C
} "Register banner"

if (CCTK_EQUALS(initial_data, "Minkowski")  ||
    CCTK_EQUALS(initial_lapse, "Minkowski") ||
    CCTK_EQUALS(initial_shift, "Minkowski") ||
    CCTK_EQUALS(initial_dtshift, "Minkowski"))
{
  SCHEDULE MinkowskiX_Initial IN ADMBase_InitialData
  {
    LANG: C
    WRITES: ADMBase::metric(everywhere)
    WRITES: ADMBase::curv(everywhere)
    WRITES: ADMBase::lapse(everywhere)
    WRITES: ADMBase::shift(everywhere)
    WRITES: ADMBase::dtshift(everywhere)
    WRITES: ADMBase::dtlapse(everywhere)
    WRITES: ADMBase::dtcurv(everywhere)
    WRITES: ADMBase::dt2lapse(everywhere)
    WRITES: ADMBase::dt2shift(everywhere)
    SYNC: ADMBase::metric
    SYNC: ADMBase::curv
    SYNC: ADMBase::lapse
    SYNC: ADMBase::shift
    SYNC: ADMBase::dtshift
    SYNC: ADMBase::dtlapse
    SYNC: ADMBase::dtcurv
    SYNC: ADMBase::dt2lapse
    SYNC: ADMBase::dt2shift
  } "Set up Minkowski initial conditions"
}

if (evolve)
{
    SCHEDULE MinkowskiX_Initial AT CCTK_PRESTEP
  {
    LANG: C
    WRITES: ADMBase::metric(everywhere)
    WRITES: ADMBase::curv(everywhere)
    WRITES: ADMBase::lapse(everywhere)
    WRITES: ADMBase::shift(everywhere)
    WRITES: ADMBase::dtshift(everywhere)
    WRITES: ADMBase::dtlapse(everywhere)
    WRITES: ADMBase::dtcurv(everywhere)
    WRITES: ADMBase::dt2lapse(everywhere)
    WRITES: ADMBase::dt2shift(everywhere)
    SYNC: ADMBase::metric
    SYNC: ADMBase::curv
    SYNC: ADMBase::lapse
    SYNC: ADMBase::shift
    SYNC: ADMBase::dtshift
    SYNC: ADMBase::dtlapse
    SYNC: ADMBase::dtcurv
    SYNC: ADMBase::dt2lapse
    SYNC: ADMBase::dt2shift
  } "Enforce that the Minkowski metric stays constant"
}