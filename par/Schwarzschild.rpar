#!/usr/bin/python 

import math
import os

def num_reflevels(refcenters):
    levels = 1
    for center in refcenters:
        levels += len(center[3])
    return levels

def centers_string(refcenters):
    output = ""
    for i, center in enumerate(refcenters):
        output += "CarpetRegrid2::num_levels_%i = %i\n" % (i + 1, len(center[3]) + 1)
        output += "CarpetRegrid2::position_x_%i = %f\n" % (i + 1, center[0])
        output += "CarpetRegrid2::position_y_%i = %f\n" % (i + 1, center[1])
        output += "CarpetRegrid2::position_z_%i = %f\n" % (i + 1, center[2])

        for j, radius in enumerate(center[3]):
            output += "CarpetRegrid2::radius_%i[%i]  = %f\n" % (i + 1, j + 1, radius)

        if i != len(refcenters) - 1:
            output += "\n"

    return output

def multipoles_string(multipole_radii):
    output = ""
    for i, radius in enumerate(multipole_radii):
        output += "Multipole::radius[%i] = %f\n" % (i, radius)

    if i != len(multipole_radii) - 1:
        output += "\n"

    return output

def makepar(parfile):
    basename = os.path.basename(__file__)
    basename_components = os.path.splitext(basename)
    outfile = open(basename_components[0] + ".par", "w")
    print(parfile, file=outfile)
    outfile.close()

#######################################################################
# General settings                                                    #
#######################################################################

sim_title = "ADMScalarWave Schwarzschild Carpet full domain test"

#######################################################################
# Domain setup                                                        #
#######################################################################

abs_corner = 10.0
cells = 20
ghosts = 3

#######################################################################
# Spherical surfaces setup                                            #
#######################################################################

maxntheta = 66
maxnphi = 124
ntheta = 41
nphi = 78

#######################################################################
# Carpet setup                                                        #
#######################################################################

# Format: x, y, z, [radii]
refinament_centers = [
    (0.0, 0.0, 0.0, [10.0, 5.0, 2.50, 1.25, 0.625])
]

num_centers = len(refinament_centers)
max_ref_levels = num_reflevels(refinament_centers)
centers_string = centers_string(refinament_centers)

#######################################################################
# Kerr Black hole position, mass and spin                             #
#######################################################################

bh_pos_x = 0.1
bh_pos_y = 0.1
bh_pos_z = 0.1
bh_m = 1.0
bh_a = 0.0
bh_radius = bh_m + math.sqrt(bh_m**2 - bh_a**2)

#######################################################################
# Scalar field initial data                                           #
#######################################################################

field_mass = 0.0

gaussian_sigma = 0.25
gaussian_R0 = 0.0

gaussian_x0 = 3.0
gaussian_y0 = 3.0
gaussian_z0 = 0.0

gaussian_c0 = 1.0
gaussian_c1 = 0.0
gaussian_c2 = 0.0

# Renormalize the multipole moments
gaussian_c0 = gaussian_c0/max(gaussian_c0, gaussian_c1, gaussian_c2)
gaussian_c1 = gaussian_c1/max(gaussian_c0, gaussian_c1, gaussian_c2)
gaussian_c2 = gaussian_c2/max(gaussian_c0, gaussian_c1, gaussian_c2)

#######################################################################
# Apparent horizons                                                   #
#######################################################################

horizon_every = 1000000000
h_every = horizon_every
theta_every = 0
qlm_par_string = "{out_every = $horizon_every}"

#######################################################################
# Excision                                                            #
#######################################################################

excision_radius = bh_radius/4.0

#######################################################################
# Outer boundary                                                      #
#######################################################################

n_Phi   = 3
n_K_Phi = 3

Phi_0   = 0.0
K_Phi_0 = 0.0

#######################################################################
# Dissipation                                                         #
#######################################################################

normal_eps = 0.25
extra_eps = 0.30
slope = 0.1

#######################################################################
# Multipole decomposition                                             #
#######################################################################

multipole_radii = [3.0, 5.0, 7.0, 9.0]
lmax = 2
extract_every = 1

nradii = len(multipole_radii)
multipoles_string = multipoles_string(multipole_radii)

multipole_par_string = "{sw=0 name='Phi'}"

#######################################################################
# Time integration                                                    #
#######################################################################

courant_factor = 0.25
final_time = 1.0

#######################################################################
# NaN check                                                           #
#######################################################################

nan_check_every = 1

#######################################################################
# Info and output                                                     #
#######################################################################

info_every = 1
out_every = math.floor(1.0/courant_factor)

parfile =f"""#######################################################################
# Schwarzschild.par                                                   #
#                                                                     #
# Background: KerrSchild                                              #
# Grid: Multiple resolutions (Carpet)                                 #
# Symmetry: None                                                      #
#######################################################################

#######################################################################
# Script variables                                                    #
#######################################################################

$title = "{sim_title}"

$min_length = {-1.0 * abs_corner}
$max_length = {abs_corner}
$cells = {cells}
$ghosts = {ghosts}

$maxntheta = {maxntheta}
$maxnphi = {maxnphi}
$ntheta = {ntheta}
$nphi = {nphi}

$bh_pos_x = {bh_pos_x}
$bh_pos_y = {bh_pos_y}
$bh_pos_z = {bh_pos_z}
$bh_m = {bh_m}
$bh_a = {bh_a}
$bh_radius = {bh_radius}

$field_mass = {field_mass}

$gaussian_sigma = {gaussian_sigma}
$gaussian_R0 = {gaussian_R0}

$gaussian_x0 = {gaussian_x0}
$gaussian_y0 = {gaussian_y0}
$gaussian_z0 = {gaussian_z0}

$gaussian_c0 = {gaussian_c0}
$gaussian_c1 = {gaussian_c1}
$gaussian_c2 = {gaussian_c2}

$horizon_every = {horizon_every}
$h_every = {h_every}
$theta_every = {theta_every}

$excision_radius = {excision_radius}

$n_Phi   = {n_Phi}
$n_K_Phi = {n_K_Phi}
$Phi_0   = {Phi_0}
$K_Phi_0 = {K_Phi_0}

$normal_eps = {normal_eps}
$extra_eps = {extra_eps}
$slope = {slope}

$courant_factor = {courant_factor}

$lmax = {lmax}
$extract_every = {extract_every}
$nradii = {nradii}

$final_time = {final_time}

$nan_check_every = {nan_check_every}
$info_every = {info_every}
$out_every = {out_every}

#######################################################################
# General settings                                                    #
#######################################################################

Cactus::cctk_run_title = $title

Cactus::cctk_full_warnings         = yes
Cactus::highlight_warning_messages = yes

#######################################################################
# Grid setup                                                          #
#######################################################################

ActiveThorns = "Boundary CartGrid3D CoordBase SymBase"

CartGrid3D::type = "coordbase"

CoordBase::domainsize = "minmax"
CoordBase::spacing    = "numcells"

CoordBase::xmin = $min_length
CoordBase::xmax = $max_length

CoordBase::ymin = $min_length
CoordBase::ymax = $max_length

CoordBase::zmin = $min_length
CoordBase::zmax = $max_length

CoordBase::ncells_x = $cells
CoordBase::ncells_y = $cells
CoordBase::ncells_z = $cells

CoordBase::boundary_size_x_lower = $ghosts
CoordBase::boundary_size_y_lower = $ghosts
CoordBase::boundary_size_z_lower = $ghosts
CoordBase::boundary_size_x_upper = $ghosts
CoordBase::boundary_size_y_upper = $ghosts
CoordBase::boundary_size_z_upper = $ghosts

CoordBase::boundary_internal_x_lower = no
CoordBase::boundary_internal_x_upper = no
CoordBase::boundary_internal_y_lower = no
CoordBase::boundary_internal_y_upper = no
CoordBase::boundary_internal_z_lower = no
CoordBase::boundary_internal_z_upper = no

CoordBase::boundary_staggered_x_lower = no
CoordBase::boundary_staggered_x_upper = no
CoordBase::boundary_staggered_y_lower = no
CoordBase::boundary_staggered_y_upper = no
CoordBase::boundary_staggered_z_lower = no
CoordBase::boundary_staggered_z_upper = no

CoordBase::boundary_shiftout_x_lower = 0
CoordBase::boundary_shiftout_y_lower = 0
CoordBase::boundary_shiftout_z_lower = 0
CoordBase::boundary_shiftout_x_upper = 0
CoordBase::boundary_shiftout_y_upper = 0
CoordBase::boundary_shiftout_z_upper = 0

#######################################################################
# Carpet setup                                                        #
#######################################################################

ActiveThorns = "Carpet CarpetLib CarpetInterp CarpetInterp2 CarpetReduce CarpetSlab CarpetRegrid2"

Carpet::domain_from_coordbase = yes
Carpet::ghost_size            = $ghosts
Carpet::max_refinement_levels = {max_ref_levels}

CarpetRegrid2::num_centres = {num_centers}

{centers_string}
Carpet::use_buffer_zones                = yes
Carpet::prolongation_order_space        = 5
Carpet::prolongation_order_time         = 2

CarpetRegrid2::freeze_unaligned_levels  = no
CarpetRegrid2::regrid_every             = -1

CarpetRegrid2::verbose                  = yes

Carpet::grid_structure_filename         = "carpet-grid-structure.asc"
Carpet::grid_coordinates_filename       = "carpet-grid-coordinates.asc"

#######################################################################
# Background spacetime                                                #
#######################################################################

ActiveThorns = "InitBase ADMBase KerrSchild"

ADMBase::initial_data     = "KerrSchild"
ADMBase::evolution_method = "KerrSchild"
ADMBase::initial_lapse    = "KerrSchild"
ADMBase::initial_shift    = "KerrSchild"
ADMBase::initial_dtlapse  = "KerrSchild"
ADMBase::initial_dtshift  = "KerrSchild"

ADMBase::lapse_timelevels  = 3
ADMBase::shift_timelevels  = 3
ADMBase::metric_timelevels = 3

InitBase::initial_data_setup_method = "init_some_levels"
Carpet::init_fill_timelevels        = yes
Carpet::init_3_timelevels           = no

KerrSchild::positionx = $bh_pos_x
KerrSchild::positiony = $bh_pos_y
KerrSchild::positionz = $bh_pos_z
KerrSchild::m = $bh_m
KerrSchild::a = $bh_a

#######################################################################
# Scalar field initial data                                           #
#######################################################################

ActiveThorns = "ADMScalarWave"

ADMScalarWave::field_mass     = $field_mass

ADMScalarWave::gaussian_sigma = $gaussian_sigma
ADMScalarWave::gaussian_R0    = $gaussian_R0

ADMScalarWave::gaussian_x0    = $gaussian_x0
ADMScalarWave::gaussian_y0    = $gaussian_y0
ADMScalarWave::gaussian_z0    = $gaussian_z0

ADMScalarWave::gaussian_c0    = $gaussian_c0
ADMScalarWave::gaussian_c1    = $gaussian_c1
ADMScalarWave::gaussian_c2    = $gaussian_c2

ADMScalarWave::excision_mask = no

#######################################################################
# Apparent Horizons                                                   #
#######################################################################

ActiveThorns = "TmunuBase SphericalSurface QuasiLocalMeasures AHFinderDirect LocalInterp AEILocalInterp"

# It's not enough to output AHFinderDirect data. One needs to set up a SphericalSurface to
# store the AH and associate it with a QuasiLocalMeasure surface. Outputing both the
# AHFinderDirect and QuasiLocalMeasures::qlm_coordinates is enough to view the horizons

SphericalSurface::nsurfaces = 1
SphericalSurface::maxntheta = $maxntheta
SphericalSurface::maxnphi   = $maxnphi
SphericalSurface::verbose   = no

SphericalSurface::ntheta      [0] = $ntheta
SphericalSurface::nphi        [0] = $nphi
SphericalSurface::nghoststheta[0] = $ghosts
SphericalSurface::nghostsphi  [0] = $ghosts

AHFinderDirect::N_horizons                               = 1
AHFinderDirect::find_every                               = $horizon_every
AHFinderDirect::output_h_every                           = $h_every
AHFinderDirect::output_Theta_every                       = $theta_every
AHFinderDirect::max_Newton_iterations__initial           = 50
AHFinderDirect::max_Newton_iterations__subsequent        = 50
AHFinderDirect::max_allowable_Theta_growth_iterations    = 10
AHFinderDirect::max_allowable_Theta_nonshrink_iterations = 10
AHFinderDirect::geometry_interpolator_name               = "Lagrange polynomial interpolation"
AHFinderDirect::geometry_interpolator_pars               = "order=4"
AHFinderDirect::surface_interpolator_name                = "Lagrange polynomial interpolation"
AHFinderDirect::surface_interpolator_pars                = "order=4"
AHFinderDirect::verbose_level                            = "physics details"

AHFinderDirect::origin_x                             [1] = $bh_pos_x
AHFinderDirect::origin_y                             [1] = $bh_pos_y
AHFinderDirect::origin_z                             [1] = $bh_pos_z
AHFinderDirect::initial_guess__coord_sphere__x_center[1] = $bh_pos_x
AHFinderDirect::initial_guess__coord_sphere__y_center[1] = $bh_pos_y
AHFinderDirect::initial_guess__coord_sphere__z_center[1] = $bh_pos_z
AHFinderDirect::initial_guess__coord_sphere__radius  [1] = $bh_radius
AHFinderDirect::which_surface_to_store_info          [1] = 0

QuasiLocalMeasures::verbose              = no
QuasiLocalMeasures::veryverbose          = no
QuasiLocalMeasures::interpolator         = "Lagrange polynomial interpolation"
QuasiLocalMeasures::interpolator_options = "order=4"
QuasiLocalMeasures::spatial_order        = 4
QuasiLocalMeasures::num_surfaces         = 1
QuasiLocalMeasures::surface_index    [0] = 0

#######################################################################
# Singularity Excision                                                #
#######################################################################

ActiveThorns = "StaticConformal SphericalSurface NoExcision"

NoExcision::num_regions         = 1
NoExcision::centre_x        [0] = $bh_pos_x
NoExcision::centre_y        [0] = $bh_pos_y
NoExcision::centre_z        [0] = $bh_pos_z
NoExcision::radius          [0] = $excision_radius
NoExcision::Minkowski_scale [0] = 2.6637047122099 # value found at r=0.875
NoExcision::reduce_rhs      [0] = yes

#######################################################################
# Physical Boundaries                                                 #
#######################################################################

ActiveThorns = "NewRad"

ADMScalarWave::bc_type = "new_rad"
ADMScalarWave::nPhi    = $n_Phi
ADMScalarWave::nK_Phi  = $n_K_Phi
ADMScalarWave::Phi0    = $Phi_0
ADMScalarWave::K_Phi0  = $K_Phi_0

#######################################################################
# Dissipation                                                         #
#######################################################################

ActiveThorns = "Dissipation SpaceMask"

Dissipation::verbose                         = no
Dissipation::epsdis                          = $normal_eps
Dissipation::extra_Dissipation_in_horizons   = yes
Dissipation::extra_Dissipation_at_outerbound = yes

Dissipation::ah_slope          = $slope
Dissipation::ah_max_epsdis     = $extra_eps
Dissipation::update_ah_every   = $horizon_every
Dissipation::surface_number[0] = 0
Dissipation::horizon_number[0] = 1

Dissipation::ob_slope                  = $slope
Dissipation::outer_boundary_max_epsdis = $extra_eps
Dissipation::outer_bound_npoints       = 5
Dissipation::vars                      = "ADMScalarWave::evolved_group"

#######################################################################
# Time integration                                                    #
#######################################################################

ActiveThorns = "MoL Time"

MoL::ode_method              = "RK4"
MoL::mol_intermediate_steps  = 4
MoL::mol_num_scratch_levels  = 1
MoL::initial_data_is_crap    = true

Carpet::num_integrator_substeps = 4

Time::timestep_method = "courant_static"
Time::dtfac           = $courant_factor

################################################################################
# Field mode decomposition
################################################################################

ActiveThorns = "Multipole"

Multipole::nradii       = $nradii
Multipole::ntheta       = $ntheta
Multipole::nphi         = $nphi
Multipole::variables    = "ADMScalarWave::Phi{multipole_par_string}"
Multipole::out_every    = $extract_every
Multipole::l_max        = $lmax
Multipole::output_hdf5  = yes

# Disable ASCII output to avoid creating a large number of files
Multipole::output_ascii = no

{multipoles_string}
#######################################################################
# Termination and final time                                          #
#######################################################################

Cactus::terminate       = "time"
Cactus::cctk_final_time = $final_time

#######################################################################
# Debugging checks                                                    #
#######################################################################

ActiveThorns = "NaNChecker"

NaNChecker::check_every     = $nan_check_every
NaNChecker::action_if_found = "terminate"
NaNChecker::check_vars      = "ADMScalarWave::evolved_group ADMScalarWave::rhs_group"

#######################################################################
# Output                                                              #
#######################################################################

ActiveThorns = "IOUtil CarpetIOBasic CarpetIOScalar CarpetIOHDF5 CarpetIOASCII"

IO::out_dir                     = $parfile

CarpetIOBasic::outInfo_every    = $info_every
CarpetIOBasic::outInfo_vars     = "ADMScalarWave::evolved_group"

CarpetIOHDF5::out_every         = $out_every
CarpetIOHDF5::compression_level = 9
CarpetIOHDF5::out_vars          = "ADMScalarWave::Phi"

IOASCII::out0D_every = $horizon_every
IOASCII::out0D_vars  = "QuasiLocalMeasures::qlm_scalars{qlm_par_string}"
"""

makepar(parfile)
