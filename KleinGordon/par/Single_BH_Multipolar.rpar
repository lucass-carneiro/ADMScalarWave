 #!/usr/bin/env python

 #######################################################################
 # Single_BH_Multipolar.par                                            #
 #                                                                     #
 # Evolve the Klein-Gordon equation on top of a single exact back-hole #
 # using Llama with 7 patches in Thornburg04 coordinates.              #
 # The spin of the black hole can be chosen to give Kerr or Schw. BHs. #
 #                                                                     #
 # The scalar field is initialized with multipolar Gaussian initial    #
 # data                                                                #
 #                                                                     #
 # I requires TODO GB for the evolution plus some buffer needed when   #
 # producing checkpoint data.                                          #
 #                                                                     #
 # It takes TODO days with TODO cores to obtain meaningfully results.  #
 #######################################################################

import math
import sys
import re
from string import Template

################################################################################
# General settings
################################################################################

run_title = "Klein Gordon in Kerr background"

full_warnings              = "yes"
highlight_warning_messages = "yes"

################################################################################
# Black hole configuration
################################################################################

mass = 1.0
dimensionless_spin = 0.0

# Estimated AH radius
horizon_radius = mass + math.sqrt(mass**2 - dimensionless_spin**2)

# Overwrite radius, i.e., the radius of the region inside of the black hole
# that will be overwritten by Minkowski in order to avoid the singularity at
# the origin by the NoExcision thorn.
overwrite_radius = 0.4 * horizon_radius

# Overwrite value for the lapse
minkowski_scale = math.sqrt(-(1 - (2 * mass * overwrite_radius)/(overwrite_radius**2 + dimensionless_spin**2)))

################################################################################
# Klein-Gordon field configuration
################################################################################

field_mass     = 0.0

gaussian_sigma = 0.25
gaussian_R0    = 4.5

gaussian_x0    = 0.0
gaussian_y0    = 0.0
gaussian_z0    = 0.0

gaussian_c_00  = 2 * math.sqrt(math.pi)
gaussian_c_1m1 = 0.0
gaussian_c_10  = 0.0
gaussian_c_11  = 0.0
gaussian_c_2m2 = 0.0
gaussian_c_2m1 = 0.0
gaussian_c_20  = 0.0
gaussian_c_21  = 0.0
gaussian_c_22  = 0.0


compute_error  = "no"
compute_Tmunu = "no"

################################################################################
# Finite difference stencil and dissipation configuration
################################################################################

# Finite difference stencil accuracy
fd_order = 4

# Dissipation magnitude.
diss_mag = 0.15

# Ghost zones in the stencil
ghosts = fd_order - 1

# Order of the K-O dissipation operator
diss_order = 2 * ghosts - 1

################################################################################
# Simulation times
################################################################################

# Time where the field's oscillation is expected to vanish (or almost vanish)
expected_oscillation_endtime = 1000.0

# Time after oscillation to keep integrating
time_after_oscillation = 200.0

# Length of the target waveform
waveform_length = expected_oscillation_endtime + time_after_oscillation

# Position of the outermost detector
outermost_detector = 500.0

# Final integration time
final_time = waveform_length + outermost_detector

################################################################################
# Grid structure
################################################################################

# Number of cells on the finest Cartesian grid
n_finest = 120

# Number of angular cells of the multipatch coordinates
n_angular = n_finest

# In SphericalSurfaces, the number of interior grid points in the phi direction
# of the surface must be a multiple of four after the symmetries have been removed.
n_phi = n_finest
while (n_phi - 2 * ghosts) % 4 != 0:
    n_phi -= 1

# In SphericalSurfaces, the number of interior grid points in the theta direction
# of the surface must be odd after the symmetries have been removed.
n_theta = n_finest
while (n_theta - 2 * ghosts) % 2 == 0:
    n_theta -= 1

# Mesh refinement levels. It affects iteration counting
refinement_levels = 6

# The minimum grid spacing below which the event horizon (and physics) cannot be reliably resolved
reliability_threshold = 0.06

# Coordinate size of the finest Cartesian level centered around the BH
finest_cart_grid_radius = horizon_radius * 1.2

# Grid separation that needs to be achieved in the finest Cartesian refinement level
finest_cart_grid_h = finest_cart_grid_radius/n_finest

# Ensure that the reliability threshold is satisfied
if finest_cart_grid_h > reliability_threshold:
    print("Error: The computed finest Cartesian grid spacing ",  finest_cart_grid_h, " is smaller than the reliability threshold ", reliability_threshold, ".")
    exit()

# Grid size in each refinement level.
levels_h = [finest_cart_grid_h * 2**(i-1) for i  in range(refinement_levels - 1, 0, -1)]

# Grid size of the coarsest refinement level
coarsest_cart_grid_h = levels_h[0]

# Radii of each refinement level
levels_radii = [finest_cart_grid_radius*2**(refinement_levels-l-1) for l in range(1, refinement_levels)]

#change each refinement level radius so that they are a multiple of the grid spacing for that level
for i in range(0, refinement_levels - 1):
    ri = levels_radii[i]
    hi = levels_h[i]
    levels_radii[i] = int(ri/hi)*hi + hi


# The string representing the radius of each refinement level. A zero is added to the beggining of the
# array to make Carpet actually create the levels.
levels_radii_string = str([0.0] + levels_radii)

# Outer radius of the spherical patch. It is made to be a multiple of the grid spacing of the coarsest refinement level.
sphere_outer_radius = int((final_time + outermost_detector)/levels_h[0])*levels_h[0] + levels_h[0]

# Inner radius of the spherical patch. It coincides with the boundaries of the outermost refinement level
sphere_inner_radius = levels_radii[0]*2

################################################################################
# Frequencies
################################################################################

# Courant factor
courant_factor = 0.25

# The frequency of a single coarse grid time step
coarse_grid_timestep_frequency = 2**(refinement_levels - 2)

# Wave extraction (multipolar decomposition) frequency.
wave_extraction_frequency = coarse_grid_timestep_frequency

# 3D data output frequency.
out3d_frequency = 0

# 2D data output frequency.
out2d_frequency = 0

# 1D data output frequency.
out1d_frequency = 0

# 0D data output frequency.
out0d_frequency = 0

# Mesh refinement regridding frequency
regrid_every = 1000000 * coarse_grid_timestep_frequency

# Apparent horizon finding frequency
ah_frequency = 1000000 * coarse_grid_timestep_frequency

# Timers and process statistics output frequency
stats_frequency = 10 * coarse_grid_timestep_frequency

# NaN checking frequency
nan_check_every = 10 * coarse_grid_timestep_frequency

# Timer output frequency
timer_tree_every = 10 * coarse_grid_timestep_frequency

################################################################################
# Record all script variables in generated parameter file
################################################################################

local_vars = locals()

col_width = 0
for key,val in sorted(local_vars.items()):
    if isinstance(val, (int, float, complex, str)):
        col_width = max(len(str(key)), col_width)

var_settings = []
for key,val in sorted(local_vars.items()):
    if isinstance(val, (int, float, complex, str)):
        var_settings = var_settings + ["# {0}{1} = {2}".format(key," "*(col_width-len(key)),val)]

var_settings_str = "\n".join(var_settings)

lines = """
################################################################################
# Script variables
################################################################################

$var_settings_str

################################################################################
# Active thorns
################################################################################

ActiveThorns = "
  ADMBase
  ADMCoupling
  ADMMacros
  AEILocalInterp
  AHFinderDirect
  Boundary
  Carpet
  CarpetIOASCII
  CarpetIOBasic
  CarpetIOHDF5
  CarpetIOScalar
  CarpetInterp
  CarpetInterp2
  CarpetLib
  CarpetReduce
  CarpetRegrid2
  CarpetTracker
  CartGrid3D
  CoordBase
  CoordGauge
  Coordinates
  CoordinatesSymmetry
  Dissipation
  Exact
  hwloc
  IOUtil
  InitBase
  Interpolate2
  KleinGordon
  LocalInterp
  LoopControl
  MoL
  NaNChecker
  NoExcision
  QuasiLocalMeasures
  SpaceMask
  SphericalSurface
  StaticConformal
  SymBase
  SystemStatistics
  SystemTopology
  TerminationTrigger
  Time
  TmunuBase
  Vectors
  NewRad
  Multipole
"

#######################################################################
# General settings                                                    #
#######################################################################

Cactus::cctk_run_title             = "$run_title"

Cactus::cctk_full_warnings         = $full_warnings
Cactus::highlight_warning_messages = $highlight_warning_messages

################################################################################
# Grid structure
################################################################################

Carpet::domain_from_multipatch          = yes
CartGrid3D::type                        = "multipatch"
CartGrid3D::set_coordinate_ranges_on    = "all maps"
Coordinates::coordinate_system          = "Thornburg04"
Coordinates::h_cartesian                = $coarsest_cart_grid_h
Coordinates::h_radial                   = $coarsest_cart_grid_h

Coordinates::sphere_inner_radius        = $sphere_inner_radius
Coordinates::sphere_outer_radius        = $sphere_outer_radius
Coordinates::n_angular                  = $n_angular

Driver::ghost_size                      = $ghosts
Coordinates::patch_boundary_size        = $ghosts
Coordinates::additional_overlap_size    = $fd_order - $ghosts
Coordinates::outer_boundary_size        = $ghosts

# change these (to their defaults) to disable z-zymmetry
CoordinatesSymmetry::reflection_z       = yes
CoordinatesSymmetry::stagger            = no
Coordinates::symmetry                   = "+z bitant"
Coordinates::additional_symmetry_size   = 1
Coordinates::verbose                    = no

Time::timestep_method                   = "courant_static"
Time::timestep                          = $courant_factor
Carpet::time_refinement_factors         = "[1,1,2,4,8,16,32,64,128,256]"

################################################################################
# Mesh refinement
################################################################################

Carpet::max_refinement_levels           = $refinement_levels
CarpetRegrid2::num_centres              = 1
CarpetRegrid2::num_levels_1             = $refinement_levels
CarpetRegrid2::position_x_1             = 0
CarpetRegrid2::position_y_1             = 0
CarpetRegrid2::position_z_1             = 0
CarpetRegrid2::radius_1                 = $levels_radii_string

Carpet::use_buffer_zones                = yes
Carpet::prolongation_order_space        = 5
Carpet::prolongation_order_time         = 2

CarpetRegrid2::regrid_every             = $regrid_every
CarpetRegrid2::verbose                  = no
Carpet::grid_coordinates_filename       = "carpet-grid.asc"

################################################################################
# Initial data
################################################################################

ADMBase::initial_data               = "exact"
ADMBase::initial_lapse              = "exact"
ADMBase::initial_shift              = "exact"

ADMBase::lapse_timelevels           = 3
ADMBase::shift_timelevels           = 3
ADMBase::metric_timelevels          = 3

Exact::exact_model                  = "Kerr/Kerr-Schild"
Exact::Kerr_KerrSchild__mass        = $mass
Exact::Kerr_KerrSchild__spin        = $dimensionless_spin
Exact::Kerr_KerrSchild__epsilon     = 1e-8

InitBase::initial_data_setup_method = "init_all_levels"
Carpet::init_fill_timelevels        = no
Carpet::init_3_timelevels           = no

################################################################################
# Evolution and boundary
################################################################################

ADMBase::lapse_evolution_method  = "exact"
ADMBase::shift_evolution_method  = "exact"

KleinGordon::compute_error       = $compute_error
KleinGordon::compute_Tmunu      = $compute_Tmunu

KleinGordon::bc_type             = "NewRad"
KleinGordon::nPhi                = 3
KleinGordon::nK_Phi              = 3
KleinGordon::Phi0                = 0.0
KleinGordon::K_Phi0              = 0.0

NewRad::z_is_radial              = yes

TmunuBase::timelevels            = 3
<<<<<<< HEAD
TmunuBase::stress_energy_storage = yes
=======
TmunuBase::stress_energy_storage = $compute_Tmunu
>>>>>>> 20f59e9 (Renamed the parameter that triggers Tmunu computations. Tweaked test parameter files)
TmunuBase::stress_energy_at_RHS  = yes

################################################################################
# Spatial finite differencing
################################################################################

KleinGordon::fd_order = $fd_order

Dissipation::verbose = no
Dissipation::epsdis  = $diss_mag
Dissipation::order   = $diss_order

Dissipation::vars = "
  KleinGordon::evolved_group
"

################################################################################
# Time integration
################################################################################

MoL::ODE_Method              = "RK4"
MoL::MoL_Intermediate_Steps  = 4
MoL::MoL_Num_Scratch_Levels  = 1

################################################################################
# Interpolation
################################################################################

CarpetInterp::check_tree_search          = no
CarpetInterp::tree_search                = yes

Interpolate2::interpolator_order         = $ghosts
Interpolate2::continue_if_selftest_fails = no

################################################################################
# KG field initial data
################################################################################

KleinGordon::field_mass     = $field_mass

KleinGordon::initial_data   = "multipolar_gaussian"

KleinGordon::gaussian_sigma = $gaussian_sigma
KleinGordon::gaussian_R0    = $gaussian_R0

KleinGordon::gaussian_x0    = $gaussian_x0
KleinGordon::gaussian_y0    = $gaussian_y0
KleinGordon::gaussian_z0    = $gaussian_z0

KleinGordon::multipoles[0]  = $gaussian_c_00
KleinGordon::multipoles[1]  = $gaussian_c_1m1
KleinGordon::multipoles[2]  = $gaussian_c_10
KleinGordon::multipoles[3]  = $gaussian_c_11
KleinGordon::multipoles[4]  = $gaussian_c_2m2
KleinGordon::multipoles[5]  = $gaussian_c_2m1
KleinGordon::multipoles[6]  = $gaussian_c_20 
KleinGordon::multipoles[7]  = $gaussian_c_21
KleinGordon::multipoles[8]  = $gaussian_c_22

################################################################################
# KG field decomposition
################################################################################

# Radii are chosen to be evenly spaced in 1/r as that is the variable
# extrapolation is performed in
Multipole::nradii       = 7
Multipole::radius[0]    = 20.0
Multipole::radius[1]    = 40.0
Multipole::radius[2]    = 60.0
Multipole::radius[3]    = 80.0
Multipole::radius[4]    = 100.0
Multipole::radius[5]    = 300.0
Multipole::radius[6]    = 500.0
Multipole::ntheta       = $n_finest
Multipole::nphi         = $n_finest
Multipole::variables    = "KleinGordon::Phi{sw=0 name='KG_Phi'}"
Multipole::out_every    = $wave_extraction_frequency
Multipole::l_max        = 8
Multipole::output_hdf5  = yes

# Disable ASCII output to avoid creating a large number of files
Multipole::output_ascii = no

################################################################################
# Apparent Horizons
################################################################################

AHFinderDirect::N_horizons                               = 1
AHFinderDirect::find_every                               = $ah_frequency
AHFinderDirect::output_h_every                           = 0
AHFinderDirect::max_Newton_iterations__initial           = 50
AHFinderDirect::max_Newton_iterations__subsequent        = 50
AHFinderDirect::max_allowable_Theta_growth_iterations    = 10
AHFinderDirect::max_allowable_Theta_nonshrink_iterations = 10
AHFinderDirect::geometry_interpolator_name               = "Lagrange polynomial interpolation"
AHFinderDirect::geometry_interpolator_pars               = "order=4"
AHFinderDirect::surface_interpolator_name                = "Lagrange polynomial interpolation"
AHFinderDirect::surface_interpolator_pars                = "order=4"
AHFinderDirect::verbose_level                            = "physics details"
AHFinderDirect::move_origins                             = yes

AHFinderDirect::origin_x                             [1] = 0
AHFinderDirect::origin_y                             [1] = 0
AHFinderDirect::origin_z                             [1] = 0
AHFinderDirect::initial_guess__coord_sphere__x_center[1] = 0
AHFinderDirect::initial_guess__coord_sphere__y_center[1] = 0
AHFinderDirect::initial_guess__coord_sphere__z_center[1] = 0
AHFinderDirect::initial_guess__coord_sphere__radius  [1] = $horizon_radius
AHFinderDirect::which_surface_to_store_info          [1] = 0
AHFinderDirect::set_mask_for_individual_horizon      [1] = no
AHFinderDirect::max_allowable_horizon_radius         [1] = 6

################################################################################
# Spherical surfaces
################################################################################

SphericalSurface::nsurfaces = 1
SphericalSurface::maxntheta = $n_theta
SphericalSurface::maxnphi   = $n_phi
SphericalSurface::verbose   = no

# Event horizon
SphericalSurface::ntheta      [0] = $n_theta
SphericalSurface::nphi        [0] = $n_phi
SphericalSurface::nghoststheta[0] = $ghosts
SphericalSurface::nghostsphi  [0] = $ghosts

################################################################################
# Isolated Horizons
################################################################################

QuasiLocalMeasures::verbose              = no
QuasiLocalMeasures::veryverbose          = no
QuasiLocalMeasures::interpolator         = "Lagrange polynomial interpolation"
QuasiLocalMeasures::interpolator_options = "order=4"
QuasiLocalMeasures::spatial_order        = 4
QuasiLocalMeasures::num_surfaces         = 1
QuasiLocalMeasures::surface_index    [0] = 0
QuasiLocalMeasures::output_vtk_every     = $out3d_frequency

################################################################################
# Singularity Excision                                                         #
################################################################################

NoExcision::method              = "new"
NoExcision::smooth_regions      = yes
NoExcision::num_regions         = 1
NoExcision::centre_x        [0] = 0.0
NoExcision::centre_y        [0] = 0.0
NoExcision::centre_z        [0] = 0.0
NoExcision::radius          [0] = $overwrite_radius
NoExcision::Minkowski_scale [0] = $minkowski_scale
NoExcision::reduce_rhs      [0] = yes

################################################################################
# Correctness checking
################################################################################

Carpet::poison_new_timelevels = no
Carpet::check_for_poison      = no

NaNChecker::check_every     = $nan_check_every
NanChecker::check_after     = 0
NaNChecker::report_max      = 10
NaNChecker::verbose         = "all"
NaNChecker::action_if_found = terminate
NaNChecker::out_NaNmask     = yes
NaNChecker::check_vars      = "
  KleinGordon::evolved_group
"

################################################################################
# Timers
################################################################################

Carpet::output_timer_tree_every      = $timer_tree_every
Carpet::output_initialise_timer_tree = yes

################################################################################
# Output
################################################################################

IO::out_dir                             = "@SIMULATION_NAME@"
IOScalar::one_file_per_group            = yes
IOASCII::one_file_per_group             = yes

IOBasic::outInfo_every            = 1
IOBasic::outInfo_reductions       = "minimum maximum average"
IOBasic::outInfo_vars             = "
  KleinGordon::Phi
  Carpet::physical_time_per_hour
  SystemStatistics::maxrss_mb
  SystemStatistics::swap_used_mb
"

IOScalar::outScalar_every      = $stats_frequency
IOScalar::outScalar_reductions = "minimum maximum average"
IOScalar::outScalar_vars       = "SystemStatistics::process_memory_mb"

IOASCII::out0D_every = $out0d_frequency
IOASCII::out0D_vars  = "
  Carpet::timing{out_every = $stats_frequency}
  QuasiLocalMeasures::qlm_scalars{out_every = $ah_frequency}
"

IOHDF5::out_every = $out3d_frequency
IOHDF5::out_vars  = "
  Grid::Coordinates{out_every=1000000000 refinement_levels={0}}
  KleinGordon::Phi
"

IOHDF5::out2d_every     = $out2d_frequency
IOHDF5::out2d_xy        = yes
IOHDF5::out2d_xz        = no
IOHDF5::out2d_yz        = no
IOHDF5::out2d_xyplane_z = 0.0
IOHDF5::out2d_vars      = "
  Grid::Coordinates{out_every=1000000000 refinement_levels={0}}
  KleinGordon::Phi
"

################################################################################
# Checkpointing and recovery
################################################################################

CarpetIOHDF5::checkpoint                    = yes
IO::checkpoint_ID                           = no
IO::recover                                 = "autoprobe"
IO::out_proc_every                          = 2
IO::checkpoint_on_terminate                 = yes
IO::checkpoint_dir                          = "../checkpoints"
IO::recover_dir                             = "../checkpoints"
IO::abort_on_io_errors                      = yes
IO::checkpoint_keep                         = 1
IO::recover_and_remove                      = yes
CarpetIOHDF5::open_one_input_file_at_a_time = yes
CarpetIOHDF5::compression_level             = 9

################################################################################
# Run termination
################################################################################

TerminationTrigger::max_walltime                 = @WALLTIME_HOURS@

# Trigger termination 120 minutes before the walltime is reached
TerminationTrigger::on_remaining_walltime        = 120
TerminationTrigger::output_remtime_every_minutes = 30
TerminationTrigger::termination_from_file        = yes
TerminationTrigger::termination_file             = "terminate.txt"
TerminationTrigger::create_termination_file      = yes

Cactus::terminate                                = "time"
Cactus::cctk_final_time                          = $final_time

# Used for debugging the parameter file
# Cactus::terminate                                = "iteration"
# Cactus::cctk_itlast                              = $coarse_grid_timestep_frequency
"""

open(re.sub(r'(.*)\.rpar$', r'\1.par', sys.argv[0]), 'w').write(re.sub(r'\n *',r'\n',Template(Template(lines).substitute(locals())).substitute(locals())))
